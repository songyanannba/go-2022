/**
 * @param $matrix
 * @return mixed
 * 给定一个 n * m 的矩阵 a，从左上角开始每次只能向右或者向下走，最后到达右下角的位置，路径上所有的数字累加起来就是路径和，输出所有的路径中最小的路径和。
 * 例如：当输入[[1,3,5,9],[8,1,3,4],[5,0,6,1],[8,8,4,0]]时，对应的返回值为12，
 */
function minPathSum($matrix) {
    $m = count($matrix);
    $n = count($matrix[0]);

    for ($i = 0 ; $i< $m; $i++) {
        for ($j = 0 ; $j< $n; $j++) {
            if ($i > 0 || $j >0) {
                $min = PHP_INT_MAX;
                if ($i > 0) {
                    $min = min($min ,$matrix[$i-1][$j]);
                }
                if ($j >0 ) {
                   $min = min($min , $matrix[$i][$j-1]);
                }
                $matrix[$i][$j] += $min;
            }
        }
    }
    return $matrix[$m-1][$n-1];
}